/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { SshKeyData, SshKeyData$zodSchema } from "./sshkeydata.js";

export const PostProjectSshKeyType2$zodSchema = z.enum([
  "ssh_keys",
]);

export type PostProjectSshKeyType2 = z.infer<
  typeof PostProjectSshKeyType2$zodSchema
>;

export type PostProjectSshKeyAttributes2 = {
  name?: string | undefined;
  public_key?: string | undefined;
};

export const PostProjectSshKeyAttributes2$zodSchema: z.ZodType<
  PostProjectSshKeyAttributes2,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  public_key: z.string().optional(),
});

export type PostProjectSshKeyData2 = {
  type: PostProjectSshKeyType2;
  attributes?: PostProjectSshKeyAttributes2 | undefined;
};

export const PostProjectSshKeyData2$zodSchema: z.ZodType<
  PostProjectSshKeyData2,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => PostProjectSshKeyAttributes2$zodSchema).optional(),
  type: PostProjectSshKeyType2$zodSchema,
});

export type PostProjectSshKeyRequestBody2 = { data: PostProjectSshKeyData2 };

export const PostProjectSshKeyRequestBody2$zodSchema: z.ZodType<
  PostProjectSshKeyRequestBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => PostProjectSshKeyData2$zodSchema),
});

export type PostProjectSshKeyRequest = {
  project_id: string;
  RequestBody: PostProjectSshKeyRequestBody2;
};

export const PostProjectSshKeyRequest$zodSchema: z.ZodType<
  PostProjectSshKeyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => PostProjectSshKeyRequestBody2$zodSchema),
  project_id: z.string().describe("Project ID or Slug"),
});

/**
 * Created
 */
export type PostProjectSshKeyResponseBody = { data?: SshKeyData | undefined };

export const PostProjectSshKeyResponseBody$zodSchema: z.ZodType<
  PostProjectSshKeyResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: SshKeyData$zodSchema.optional(),
}).describe("Created");

export type PostProjectSshKeyResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: PostProjectSshKeyResponseBody | undefined;
};

export const PostProjectSshKeyResponse$zodSchema: z.ZodType<
  PostProjectSshKeyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => PostProjectSshKeyResponseBody$zodSchema).optional(),
});
