/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ApiKey, ApiKey$zodSchema } from "./apikey.js";
import { UpdateApiKey, UpdateApiKey$zodSchema } from "./updateapikey.js";

export type UpdateApiKeyRequest = {
  api_key_id: string;
  update_api_key: UpdateApiKey;
};

export const UpdateApiKeyRequest$zodSchema: z.ZodType<
  UpdateApiKeyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  api_key_id: z.string(),
  update_api_key: UpdateApiKey$zodSchema,
});

/**
 * Success
 */
export type UpdateApiKeyResponseBody = { data?: ApiKey | undefined };

export const UpdateApiKeyResponseBody$zodSchema: z.ZodType<
  UpdateApiKeyResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: ApiKey$zodSchema.optional(),
}).describe("Success");

export type UpdateApiKeyResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: UpdateApiKeyResponseBody | undefined;
};

export const UpdateApiKeyResponse$zodSchema: z.ZodType<
  UpdateApiKeyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => UpdateApiKeyResponseBody$zodSchema).optional(),
});
