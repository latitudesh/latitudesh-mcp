/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const StoragePlanDataType$zodSchema = z.enum([
  "storage_plans",
]);

export type StoragePlanDataType = z.infer<typeof StoragePlanDataType$zodSchema>;

export type StoragePlanDataPricing = { month?: number | undefined };

export const StoragePlanDataPricing$zodSchema: z.ZodType<
  StoragePlanDataPricing,
  z.ZodTypeDef,
  unknown
> = z.object({
  month: z.number().optional(),
});

export type StoragePlanDataAttributes = {
  name?: string | undefined;
  locations?: Array<string> | undefined;
  pricing?: StoragePlanDataPricing | undefined;
};

export const StoragePlanDataAttributes$zodSchema: z.ZodType<
  StoragePlanDataAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  locations: z.array(z.string()).optional(),
  name: z.string().optional(),
  pricing: z.lazy(() => StoragePlanDataPricing$zodSchema).optional(),
});

export type StoragePlanData = {
  id?: string | undefined;
  type?: StoragePlanDataType | undefined;
  attributes?: StoragePlanDataAttributes | undefined;
};

export const StoragePlanData$zodSchema: z.ZodType<
  StoragePlanData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => StoragePlanDataAttributes$zodSchema).optional(),
  id: z.string().optional(),
  type: StoragePlanDataType$zodSchema.optional(),
});
