/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Partition = {
  path?: string | undefined;
  size_in_gb?: number | undefined;
  filesystem_type?: string | undefined;
};

export const Partition$zodSchema: z.ZodType<Partition, z.ZodTypeDef, unknown> =
  z.object({
    filesystem_type: z.string().optional(),
    path: z.string().optional(),
    size_in_gb: z.number().int().optional(),
  });

export type DeployConfigAttributes = {
  operating_system?: string | undefined;
  hostname?: string | undefined;
  raid?: string | undefined;
  user_data?: string | undefined;
  ssh_keys?: Array<string> | undefined;
  partitions?: Array<Partition> | undefined;
};

export const DeployConfigAttributes$zodSchema: z.ZodType<
  DeployConfigAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  hostname: z.string().optional(),
  operating_system: z.string().optional(),
  partitions: z.array(z.lazy(() => Partition$zodSchema)).optional(),
  raid: z.string().optional(),
  ssh_keys: z.array(z.string()).optional(),
  user_data: z.string().optional(),
});

export type DeployConfigData = {
  id?: string | undefined;
  attributes?: DeployConfigAttributes | undefined;
};

export const DeployConfigData$zodSchema: z.ZodType<
  DeployConfigData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => DeployConfigAttributes$zodSchema).optional(),
  id: z.string().optional(),
});

export type DeployConfig = { data?: DeployConfigData | undefined };

export const DeployConfig$zodSchema: z.ZodType<
  DeployConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => DeployConfigData$zodSchema).optional(),
});
