/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Team, Team$zodSchema } from "./team.js";

export const PatchCurrentTeamType2$zodSchema = z.enum([
  "teams",
]);

export type PatchCurrentTeamType2 = z.infer<
  typeof PatchCurrentTeamType2$zodSchema
>;

export const PatchCurrentTeamCurrency2$zodSchema = z.enum([
  "USD",
  "BRL",
]);

export type PatchCurrentTeamCurrency2 = z.infer<
  typeof PatchCurrentTeamCurrency2$zodSchema
>;

export type PatchCurrentTeamAttributes2 = {
  address?: string | undefined;
  name?: string | undefined;
  currency?: PatchCurrentTeamCurrency2 | undefined;
  referred_code?: string | undefined;
};

export const PatchCurrentTeamAttributes2$zodSchema: z.ZodType<
  PatchCurrentTeamAttributes2,
  z.ZodTypeDef,
  unknown
> = z.object({
  address: z.string().optional(),
  currency: PatchCurrentTeamCurrency2$zodSchema.default("USD"),
  name: z.string().optional(),
  referred_code: z.string().optional(),
});

export type PatchCurrentTeamData2 = {
  id: string;
  type: PatchCurrentTeamType2;
  attributes?: PatchCurrentTeamAttributes2 | undefined;
};

export const PatchCurrentTeamData2$zodSchema: z.ZodType<
  PatchCurrentTeamData2,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => PatchCurrentTeamAttributes2$zodSchema).optional(),
  id: z.string(),
  type: PatchCurrentTeamType2$zodSchema,
});

export type PatchCurrentTeamRequestBody2 = { data: PatchCurrentTeamData2 };

export const PatchCurrentTeamRequestBody2$zodSchema: z.ZodType<
  PatchCurrentTeamRequestBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => PatchCurrentTeamData2$zodSchema),
});

export type PatchCurrentTeamRequest = {
  team_id: string;
  RequestBody: PatchCurrentTeamRequestBody2;
};

export const PatchCurrentTeamRequest$zodSchema: z.ZodType<
  PatchCurrentTeamRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => PatchCurrentTeamRequestBody2$zodSchema),
  team_id: z.string(),
});

/**
 * Success
 */
export type PatchCurrentTeamResponseBody = { data?: Team | undefined };

export const PatchCurrentTeamResponseBody$zodSchema: z.ZodType<
  PatchCurrentTeamResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: Team$zodSchema.optional(),
}).describe("Success");

export type PatchCurrentTeamResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: PatchCurrentTeamResponseBody | undefined;
};

export const PatchCurrentTeamResponse$zodSchema: z.ZodType<
  PatchCurrentTeamResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => PatchCurrentTeamResponseBody$zodSchema).optional(),
});
