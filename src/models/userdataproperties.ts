/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const UserDataPropertiesType$zodSchema = z.enum([
  "user_data",
]);

export type UserDataPropertiesType = z.infer<
  typeof UserDataPropertiesType$zodSchema
>;

export type UserDataPropertiesAttributes = {
  description?: string | undefined;
  content?: string | undefined;
  created_at?: string | undefined;
  updated_at?: string | undefined;
};

export const UserDataPropertiesAttributes$zodSchema: z.ZodType<
  UserDataPropertiesAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.string().optional(),
  created_at: z.string().optional(),
  description: z.string().optional(),
  updated_at: z.string().optional(),
});

export type UserDataProperties = {
  id?: string | undefined;
  type: UserDataPropertiesType;
  attributes?: UserDataPropertiesAttributes | undefined;
};

export const UserDataProperties$zodSchema: z.ZodType<
  UserDataProperties,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => UserDataPropertiesAttributes$zodSchema).optional(),
  id: z.string().optional(),
  type: UserDataPropertiesType$zodSchema,
});
