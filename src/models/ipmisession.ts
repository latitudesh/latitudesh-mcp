/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const IpmiSessionType$zodSchema = z.enum([
  "ipmi_sessions",
]);

export type IpmiSessionType = z.infer<typeof IpmiSessionType$zodSchema>;

export type IpmiSessionAttributes = {
  ipmi_address?: string | undefined;
  ipmi_username?: string | undefined;
  ipmi_password?: string | undefined;
};

export const IpmiSessionAttributes$zodSchema: z.ZodType<
  IpmiSessionAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  ipmi_address: z.string().optional(),
  ipmi_password: z.string().optional(),
  ipmi_username: z.string().optional(),
});

export type IpmiSessionData = {
  id?: string | undefined;
  type?: IpmiSessionType | undefined;
  attributes?: IpmiSessionAttributes | undefined;
};

export const IpmiSessionData$zodSchema: z.ZodType<
  IpmiSessionData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => IpmiSessionAttributes$zodSchema).optional(),
  id: z.string().optional(),
  type: IpmiSessionType$zodSchema.optional(),
});

export type IpmiSession = { data?: IpmiSessionData | undefined };

export const IpmiSession$zodSchema: z.ZodType<
  IpmiSession,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => IpmiSessionData$zodSchema).optional(),
});
