/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { VirtualNetwork, VirtualNetwork$zodSchema } from "./virtualnetwork.js";

export const CreateVirtualNetworkType2$zodSchema = z.enum([
  "virtual_network",
]);

export type CreateVirtualNetworkType2 = z.infer<
  typeof CreateVirtualNetworkType2$zodSchema
>;

/**
 * Site ID or slug
 */
export const CreateVirtualNetworkSite2$zodSchema = z.enum([
  "ASH",
  "BGT",
  "BUE",
  "CHI",
  "DAL",
  "FRA",
  "LAX",
  "LON",
  "MEX",
  "MEX2",
  "MIA",
  "MIA2",
  "NYC",
  "SAN",
  "SAO",
  "SAO2",
  "SYD",
  "TYO",
  "TYO2",
]).describe("Site ID or slug");

export type CreateVirtualNetworkSite2 = z.infer<
  typeof CreateVirtualNetworkSite2$zodSchema
>;

export type CreateVirtualNetworkAttributes2 = {
  description: string;
  site?: CreateVirtualNetworkSite2 | undefined;
  project: string;
};

export const CreateVirtualNetworkAttributes2$zodSchema: z.ZodType<
  CreateVirtualNetworkAttributes2,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.string(),
  project: z.string(),
  site: CreateVirtualNetworkSite2$zodSchema.optional(),
});

export type CreateVirtualNetworkData2 = {
  type: CreateVirtualNetworkType2;
  attributes: CreateVirtualNetworkAttributes2;
};

export const CreateVirtualNetworkData2$zodSchema: z.ZodType<
  CreateVirtualNetworkData2,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => CreateVirtualNetworkAttributes2$zodSchema),
  type: CreateVirtualNetworkType2$zodSchema,
});

export type CreateVirtualNetworkRequest = { data: CreateVirtualNetworkData2 };

export const CreateVirtualNetworkRequest$zodSchema: z.ZodType<
  CreateVirtualNetworkRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => CreateVirtualNetworkData2$zodSchema),
});

export type CreateVirtualNetworkResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  virtual_network?: VirtualNetwork | undefined;
};

export const CreateVirtualNetworkResponse$zodSchema: z.ZodType<
  CreateVirtualNetworkResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  virtual_network: VirtualNetwork$zodSchema.optional(),
});
