/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const CreateApiKeyType$zodSchema = z.enum([
  "api_keys",
]);

export type CreateApiKeyType = z.infer<typeof CreateApiKeyType$zodSchema>;

export type CreateApiKeyAttributes = { name?: string | undefined };

export const CreateApiKeyAttributes$zodSchema: z.ZodType<
  CreateApiKeyAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().default("Name of the API Key"),
});

export type CreateApiKeyData = {
  type: CreateApiKeyType;
  attributes?: CreateApiKeyAttributes | undefined;
};

export const CreateApiKeyData$zodSchema: z.ZodType<
  CreateApiKeyData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => CreateApiKeyAttributes$zodSchema).optional(),
  type: CreateApiKeyType$zodSchema,
});

export type CreateApiKey = { data?: CreateApiKeyData | undefined };

export const CreateApiKey$zodSchema: z.ZodType<
  CreateApiKey,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => CreateApiKeyData$zodSchema).optional(),
});
