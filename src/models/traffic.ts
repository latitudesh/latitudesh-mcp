/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const TrafficType$zodSchema = z.enum([
  "traffic",
]);

export type TrafficType = z.infer<typeof TrafficType$zodSchema>;

export type AttributesData = {
  date?: string | undefined;
  inbound_gb?: number | undefined;
  outbound_gb?: number | undefined;
  avg_outbound_speed_mbps?: number | undefined;
  avg_inbound_speed_mbps?: number | undefined;
};

export const AttributesData$zodSchema: z.ZodType<
  AttributesData,
  z.ZodTypeDef,
  unknown
> = z.object({
  avg_inbound_speed_mbps: z.number().optional(),
  avg_outbound_speed_mbps: z.number().optional(),
  date: z.string().optional(),
  inbound_gb: z.number().int().optional(),
  outbound_gb: z.number().int().optional(),
});

export type TrafficRegion = {
  region_slug?: string | undefined;
  total_inbound_gb?: number | undefined;
  total_outbound_gb?: number | undefined;
  total_inbound_95th_percentile_mbps?: number | undefined;
  total_outbound_95th_percentile_mbps?: number | undefined;
  data?: Array<AttributesData> | undefined;
};

export const TrafficRegion$zodSchema: z.ZodType<
  TrafficRegion,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(z.lazy(() => AttributesData$zodSchema)).optional(),
  region_slug: z.string().optional(),
  total_inbound_95th_percentile_mbps: z.number().optional(),
  total_inbound_gb: z.number().int().optional(),
  total_outbound_95th_percentile_mbps: z.number().optional(),
  total_outbound_gb: z.number().int().optional(),
});

export type TrafficAttributes = {
  from_date?: number | undefined;
  to_date?: number | undefined;
  regions?: Array<TrafficRegion> | undefined;
  total_inbound_gb?: number | undefined;
  total_outbound_gb?: number | undefined;
  total_inbound_95th_percentile_mbps?: number | undefined;
  total_outbound_95th_percentile_mbps?: number | undefined;
};

export const TrafficAttributes$zodSchema: z.ZodType<
  TrafficAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  from_date: z.number().int().optional(),
  regions: z.array(z.lazy(() => TrafficRegion$zodSchema)).optional(),
  to_date: z.number().int().optional(),
  total_inbound_95th_percentile_mbps: z.number().optional(),
  total_inbound_gb: z.number().int().optional(),
  total_outbound_95th_percentile_mbps: z.number().optional(),
  total_outbound_gb: z.number().int().optional(),
});

export type TrafficData = {
  id?: string | undefined;
  type?: TrafficType | undefined;
  attributes?: TrafficAttributes | undefined;
};

export const TrafficData$zodSchema: z.ZodType<
  TrafficData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => TrafficAttributes$zodSchema).optional(),
  id: z.string().optional(),
  type: TrafficType$zodSchema.optional(),
});

export type Traffic = { data?: TrafficData | undefined };

export const Traffic$zodSchema: z.ZodType<Traffic, z.ZodTypeDef, unknown> = z
  .object({
    data: z.lazy(() => TrafficData$zodSchema).optional(),
  });
