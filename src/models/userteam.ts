/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { UserInclude, UserInclude$zodSchema } from "./userinclude.js";

export type UserTeamBilling = {
  id?: string | undefined;
  customer_billing_id?: string | undefined;
};

export const UserTeamBilling$zodSchema: z.ZodType<
  UserTeamBilling,
  z.ZodTypeDef,
  unknown
> = z.object({
  customer_billing_id: z.string().optional(),
  id: z.string().optional(),
});

export type UserTeamAttributes = {
  name?: string | undefined;
  slug?: string | undefined;
  description?: string | undefined;
  address?: string | undefined;
  currency?: string | undefined;
  created_at?: string | undefined;
  updated_at?: string | undefined;
  owner?: UserInclude | undefined;
  billing?: UserTeamBilling | undefined;
};

export const UserTeamAttributes$zodSchema: z.ZodType<
  UserTeamAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  address: z.string().optional(),
  billing: z.lazy(() => UserTeamBilling$zodSchema).optional(),
  created_at: z.string().optional(),
  currency: z.string().optional(),
  description: z.string().optional(),
  name: z.string().optional(),
  owner: UserInclude$zodSchema.optional(),
  slug: z.string().optional(),
  updated_at: z.string().optional(),
});

export type UserTeam = {
  id?: string | undefined;
  attributes?: UserTeamAttributes | undefined;
};

export const UserTeam$zodSchema: z.ZodType<UserTeam, z.ZodTypeDef, unknown> = z
  .object({
    attributes: z.lazy(() => UserTeamAttributes$zodSchema).optional(),
    id: z.string().optional(),
  });
