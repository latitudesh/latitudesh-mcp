/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  VirtualNetworkAssignment,
  VirtualNetworkAssignment$zodSchema,
} from "./virtualnetworkassignment.js";

export const AssignServerVirtualNetworkType2$zodSchema = z.enum([
  "virtual_network_assignment",
]);

export type AssignServerVirtualNetworkType2 = z.infer<
  typeof AssignServerVirtualNetworkType2$zodSchema
>;

export type AssignServerVirtualNetworkAttributes2 = {
  server_id: string;
  virtual_network_id: string;
};

export const AssignServerVirtualNetworkAttributes2$zodSchema: z.ZodType<
  AssignServerVirtualNetworkAttributes2,
  z.ZodTypeDef,
  unknown
> = z.object({
  server_id: z.string(),
  virtual_network_id: z.string(),
});

export type AssignServerVirtualNetworkData2 = {
  type: AssignServerVirtualNetworkType2;
  attributes?: AssignServerVirtualNetworkAttributes2 | undefined;
};

export const AssignServerVirtualNetworkData2$zodSchema: z.ZodType<
  AssignServerVirtualNetworkData2,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => AssignServerVirtualNetworkAttributes2$zodSchema)
    .optional(),
  type: AssignServerVirtualNetworkType2$zodSchema,
});

export type AssignServerVirtualNetworkRequest = {
  data?: AssignServerVirtualNetworkData2 | undefined;
};

export const AssignServerVirtualNetworkRequest$zodSchema: z.ZodType<
  AssignServerVirtualNetworkRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => AssignServerVirtualNetworkData2$zodSchema).optional(),
});

export type AssignServerVirtualNetworkResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  virtual_network_assignment?: VirtualNetworkAssignment | undefined;
};

export const AssignServerVirtualNetworkResponse$zodSchema: z.ZodType<
  AssignServerVirtualNetworkResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  virtual_network_assignment: VirtualNetworkAssignment$zodSchema.optional(),
});
