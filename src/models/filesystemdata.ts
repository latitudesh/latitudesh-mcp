/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const FilesystemDataType$zodSchema = z.enum([
  "filesystems",
]);

export type FilesystemDataType = z.infer<typeof FilesystemDataType$zodSchema>;

export type FilesystemDataProject = {
  id?: string | undefined;
  name?: string | undefined;
  slug?: string | undefined;
};

export const FilesystemDataProject$zodSchema: z.ZodType<
  FilesystemDataProject,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  slug: z.string().optional(),
});

export type FilesystemDataAttributes = {
  name?: string | undefined;
  size_in_gb?: number | undefined;
  created_at?: string | undefined;
  project?: FilesystemDataProject | undefined;
};

export const FilesystemDataAttributes$zodSchema: z.ZodType<
  FilesystemDataAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  created_at: z.string().datetime({ offset: true }).optional(),
  name: z.string().optional(),
  project: z.lazy(() => FilesystemDataProject$zodSchema).optional(),
  size_in_gb: z.number().int().optional(),
});

export type FilesystemData = {
  id?: string | undefined;
  type?: FilesystemDataType | undefined;
  attributes?: FilesystemDataAttributes | undefined;
};

export const FilesystemData$zodSchema: z.ZodType<
  FilesystemData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => FilesystemDataAttributes$zodSchema).optional(),
  id: z.string().optional(),
  type: FilesystemDataType$zodSchema.optional(),
});
