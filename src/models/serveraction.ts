/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const ServerActionType$zodSchema = z.enum([
  "actions",
]);

export type ServerActionType = z.infer<typeof ServerActionType$zodSchema>;

export type ServerActionAttributes = { status?: string | undefined };

export const ServerActionAttributes$zodSchema: z.ZodType<
  ServerActionAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.string().optional(),
});

export type ServerActionData = {
  id?: string | undefined;
  type?: ServerActionType | undefined;
  attributes?: ServerActionAttributes | undefined;
};

export const ServerActionData$zodSchema: z.ZodType<
  ServerActionData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => ServerActionAttributes$zodSchema).optional(),
  id: z.string().optional(),
  type: ServerActionType$zodSchema.optional(),
});

export type ServerActionMeta = {};

export const ServerActionMeta$zodSchema: z.ZodType<
  ServerActionMeta,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type ServerAction = {
  data?: ServerActionData | undefined;
  meta?: ServerActionMeta | undefined;
};

export const ServerAction$zodSchema: z.ZodType<
  ServerAction,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => ServerActionData$zodSchema).optional(),
  meta: z.lazy(() => ServerActionMeta$zodSchema).optional(),
});
