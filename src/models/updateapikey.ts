/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const UpdateApiKeyType$zodSchema = z.enum([
  "api_keys",
]);

export type UpdateApiKeyType = z.infer<typeof UpdateApiKeyType$zodSchema>;

export type UpdateApiKeyAttributes = {
  name?: string | undefined;
  api_version?: string | undefined;
};

export const UpdateApiKeyAttributes$zodSchema: z.ZodType<
  UpdateApiKeyAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  api_version: z.string().default("2023-06-01"),
  name: z.string().default("Name of the API Key"),
});

export type UpdateApiKeyData = {
  id?: string | undefined;
  type: UpdateApiKeyType;
  attributes?: UpdateApiKeyAttributes | undefined;
};

export const UpdateApiKeyData$zodSchema: z.ZodType<
  UpdateApiKeyData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => UpdateApiKeyAttributes$zodSchema).optional(),
  id: z.string().optional(),
  type: UpdateApiKeyType$zodSchema,
});

export type UpdateApiKey = { data?: UpdateApiKeyData | undefined };

export const UpdateApiKey$zodSchema: z.ZodType<
  UpdateApiKey,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => UpdateApiKeyData$zodSchema).optional(),
});
