/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const VirtualMachinePayloadType$zodSchema = z.enum([
  "virtual_machines",
]);

export type VirtualMachinePayloadType = z.infer<
  typeof VirtualMachinePayloadType$zodSchema
>;

export type VirtualMachinePayloadAttributes = {
  name?: string | undefined;
  plan?: string | undefined;
  ssh_keys?: Array<string> | undefined;
  project?: string | undefined;
};

export const VirtualMachinePayloadAttributes$zodSchema: z.ZodType<
  VirtualMachinePayloadAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().default("my-vm"),
  plan: z.string().optional(),
  project: z.string().default("my-project"),
  ssh_keys: z.array(z.string()).optional(),
});

export type VirtualMachinePayloadData = {
  type?: VirtualMachinePayloadType | undefined;
  attributes?: VirtualMachinePayloadAttributes | undefined;
};

export const VirtualMachinePayloadData$zodSchema: z.ZodType<
  VirtualMachinePayloadData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => VirtualMachinePayloadAttributes$zodSchema)
    .optional(),
  type: VirtualMachinePayloadType$zodSchema.optional(),
});

export type VirtualMachinePayload = {
  data?: VirtualMachinePayloadData | undefined;
};

export const VirtualMachinePayload$zodSchema: z.ZodType<
  VirtualMachinePayload,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => VirtualMachinePayloadData$zodSchema).optional(),
});
