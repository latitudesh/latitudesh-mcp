/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { DeployConfig, DeployConfig$zodSchema } from "./deployconfig.js";

export const UpdateServerDeployConfigType2$zodSchema = z.enum([
  "deploy_config",
]);

export type UpdateServerDeployConfigType2 = z.infer<
  typeof UpdateServerDeployConfigType2$zodSchema
>;

export const UpdateServerDeployConfigOperatingSystem2$zodSchema = z.enum([
  "ipxe",
  "windows_server_2019_std_v1",
  "ubuntu_22_04_x64_lts",
  "debian_11",
  "debian_10",
  "rhel8",
  "windows_server_2012_r2_std_v28",
  "windows_server_2012_r2_dc_v5",
  "esxi_6_7",
  "debian_9_4_x64",
  "centos_7_4_x64",
  "centos_8_x64",
  "ubuntu_16_04_x64_lts",
  "ubuntu_20_04_x64_lts",
  "windows_server_2016_std_v1",
  "windows_server_2016_dc_v1",
  "windows_server_2019_dc_v1",
  "debian_12",
  "ubuntu22_ml_in_a_box",
  "ubuntu_18_04_x64_lts",
  "windows_server_2019_std_uefi",
  "windows_2022_std_uefi",
  "windows_2022_std",
  "ubuntu_24_04_x64_lts",
  "rockylinux_8",
]);

export type UpdateServerDeployConfigOperatingSystem2 = z.infer<
  typeof UpdateServerDeployConfigOperatingSystem2$zodSchema
>;

export const UpdateServerDeployConfigRaid2$zodSchema = z.enum([
  "raid-0",
  "raid-1",
]);

export type UpdateServerDeployConfigRaid2 = z.infer<
  typeof UpdateServerDeployConfigRaid2$zodSchema
>;

export type UpdateServerDeployConfigPartition2 = {
  size_in_gb?: number | undefined;
  path?: string | undefined;
  filesystem_type?: string | undefined;
};

export const UpdateServerDeployConfigPartition2$zodSchema: z.ZodType<
  UpdateServerDeployConfigPartition2,
  z.ZodTypeDef,
  unknown
> = z.object({
  filesystem_type: z.string().optional(),
  path: z.string().optional(),
  size_in_gb: z.number().int().optional(),
});

export type UpdateServerDeployConfigAttributes2 = {
  hostname?: string | undefined;
  operating_system?: UpdateServerDeployConfigOperatingSystem2 | undefined;
  raid?: UpdateServerDeployConfigRaid2 | undefined;
  user_data?: string | undefined;
  ssh_keys?: Array<string> | undefined;
  partitions?: Array<UpdateServerDeployConfigPartition2> | undefined;
  ipxe_url?: string | undefined;
};

export const UpdateServerDeployConfigAttributes2$zodSchema: z.ZodType<
  UpdateServerDeployConfigAttributes2,
  z.ZodTypeDef,
  unknown
> = z.object({
  hostname: z.string().optional(),
  ipxe_url: z.string().optional(),
  operating_system: UpdateServerDeployConfigOperatingSystem2$zodSchema
    .optional(),
  partitions: z.array(
    z.lazy(() => UpdateServerDeployConfigPartition2$zodSchema),
  ).optional(),
  raid: UpdateServerDeployConfigRaid2$zodSchema.optional(),
  ssh_keys: z.array(z.string()).optional(),
  user_data: z.string().optional(),
});

export type UpdateServerDeployConfigRequestBody2 = {
  type: UpdateServerDeployConfigType2;
  attributes?: UpdateServerDeployConfigAttributes2 | undefined;
};

export const UpdateServerDeployConfigRequestBody2$zodSchema: z.ZodType<
  UpdateServerDeployConfigRequestBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => UpdateServerDeployConfigAttributes2$zodSchema)
    .optional(),
  type: UpdateServerDeployConfigType2$zodSchema,
});

export type UpdateServerDeployConfigRequest = {
  server_id: string;
  RequestBody: UpdateServerDeployConfigRequestBody2;
};

export const UpdateServerDeployConfigRequest$zodSchema: z.ZodType<
  UpdateServerDeployConfigRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => UpdateServerDeployConfigRequestBody2$zodSchema),
  server_id: z.string().describe("The Server ID"),
});

export type UpdateServerDeployConfigResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  deploy_config?: DeployConfig | undefined;
};

export const UpdateServerDeployConfigResponse$zodSchema: z.ZodType<
  UpdateServerDeployConfigResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  deploy_config: DeployConfig$zodSchema.optional(),
});
