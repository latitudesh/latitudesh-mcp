/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { UserData, UserData$zodSchema } from "./userdata.js";

export type GetUserDataRequest = {
  user_data_id: string;
  extraFieldsUserData?: string | undefined;
};

export const GetUserDataRequest$zodSchema: z.ZodType<
  GetUserDataRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  extraFieldsUserData: z.string().default("decoded_content").describe(
    "The `decoded_content` is provided as an extra attribute that shows content in decoded form.",
  ),
  user_data_id: z.string(),
});

export type GetUserDataResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  user_data?: UserData | undefined;
};

export const GetUserDataResponse$zodSchema: z.ZodType<
  GetUserDataResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  user_data: UserData$zodSchema.optional(),
});
