/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type RegionsCountry = {
  slug?: string | undefined;
  name?: string | undefined;
};

export const RegionsCountry$zodSchema: z.ZodType<
  RegionsCountry,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  slug: z.string().optional(),
});

export type RegionsAttributes = {
  slug?: string | undefined;
  name?: string | undefined;
  country?: RegionsCountry | undefined;
};

export const RegionsAttributes$zodSchema: z.ZodType<
  RegionsAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  country: z.lazy(() => RegionsCountry$zodSchema).optional(),
  name: z.string().optional(),
  slug: z.string().optional(),
});

export type RegionsData = {
  id?: string | undefined;
  attributes?: RegionsAttributes | undefined;
};

export const RegionsData$zodSchema: z.ZodType<
  RegionsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => RegionsAttributes$zodSchema).optional(),
  id: z.string().optional(),
});

export type Regions = { data?: Array<RegionsData> | undefined };

export const Regions$zodSchema: z.ZodType<Regions, z.ZodTypeDef, unknown> = z
  .object({
    data: z.array(z.lazy(() => RegionsData$zodSchema)).optional(),
  });
