/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type TeamMembersRole = {
  id?: string | undefined;
  name?: string | undefined;
  created_at?: string | undefined;
  updated_at?: string | undefined;
};

export const TeamMembersRole$zodSchema: z.ZodType<
  TeamMembersRole,
  z.ZodTypeDef,
  unknown
> = z.object({
  created_at: z.string().optional(),
  id: z.string().optional(),
  name: z.string().optional(),
  updated_at: z.string().optional(),
});

export type TeamMembersData = {
  first_name?: string | undefined;
  last_name?: string | undefined;
  email?: string | undefined;
  mfa_enabled?: boolean | undefined;
  role?: TeamMembersRole | undefined;
};

export const TeamMembersData$zodSchema: z.ZodType<
  TeamMembersData,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string().optional(),
  first_name: z.string().optional(),
  last_name: z.string().optional(),
  mfa_enabled: z.boolean().optional(),
  role: z.lazy(() => TeamMembersRole$zodSchema).optional(),
});

export type TeamMembers = { data?: Array<TeamMembersData> | undefined };

export const TeamMembers$zodSchema: z.ZodType<
  TeamMembers,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(z.lazy(() => TeamMembersData$zodSchema)).optional(),
});
