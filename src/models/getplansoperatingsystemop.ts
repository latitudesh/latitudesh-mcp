/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  OperatingSystems,
  OperatingSystems$zodSchema,
} from "./operatingsystems.js";

export type GetPlansOperatingSystemRequest = {
  pageSize?: number | undefined;
  pageNumber?: number | undefined;
};

export const GetPlansOperatingSystemRequest$zodSchema: z.ZodType<
  GetPlansOperatingSystemRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pageNumber: z.number().int().default(1).describe(
    "Page number to return (starts at 1)",
  ),
  pageSize: z.number().int().default(20).describe(
    "Number of items to return per page",
  ),
});

/**
 * Success
 */
export type GetPlansOperatingSystemResponseBody = {
  data?: Array<OperatingSystems> | undefined;
};

export const GetPlansOperatingSystemResponseBody$zodSchema: z.ZodType<
  GetPlansOperatingSystemResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(OperatingSystems$zodSchema).optional(),
}).describe("Success");

export type GetPlansOperatingSystemResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: GetPlansOperatingSystemResponseBody | undefined;
};

export const GetPlansOperatingSystemResponse$zodSchema: z.ZodType<
  GetPlansOperatingSystemResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => GetPlansOperatingSystemResponseBody$zodSchema)
    .optional(),
});
