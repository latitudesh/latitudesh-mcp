/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const BandwidthPackagesType$zodSchema = z.enum([
  "bandwidth_packages",
]);

export type BandwidthPackagesType = z.infer<
  typeof BandwidthPackagesType$zodSchema
>;

export type BandwidthPackagesProject = {
  id?: number | undefined;
  name?: string | undefined;
  slug?: string | undefined;
};

export const BandwidthPackagesProject$zodSchema: z.ZodType<
  BandwidthPackagesProject,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int().optional(),
  name: z.string().optional(),
  slug: z.string().optional(),
});

export type Package = {
  region_slug?: string | undefined;
  currency?: string | undefined;
  unit_price?: number | undefined;
  contracted?: number | undefined;
  total_price?: number | undefined;
};

export const Package$zodSchema: z.ZodType<Package, z.ZodTypeDef, unknown> = z
  .object({
    contracted: z.number().int().optional(),
    currency: z.string().optional(),
    region_slug: z.string().optional(),
    total_price: z.number().optional(),
    unit_price: z.number().optional(),
  });

export type BandwidthPackagesAttributes = {
  project?: BandwidthPackagesProject | undefined;
  packages?: Array<Package> | undefined;
};

export const BandwidthPackagesAttributes$zodSchema: z.ZodType<
  BandwidthPackagesAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  packages: z.array(z.lazy(() => Package$zodSchema)).optional(),
  project: z.lazy(() => BandwidthPackagesProject$zodSchema).optional(),
});

export type BandwidthPackages = {
  type?: BandwidthPackagesType | undefined;
  attributes?: BandwidthPackagesAttributes | undefined;
};

export const BandwidthPackages$zodSchema: z.ZodType<
  BandwidthPackages,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => BandwidthPackagesAttributes$zodSchema).optional(),
  type: BandwidthPackagesType$zodSchema.optional(),
});
