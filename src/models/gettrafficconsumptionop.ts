/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Traffic, Traffic$zodSchema } from "./traffic.js";

export type GetTrafficConsumptionRequest = {
  filterServer?: string | undefined;
  filterProject?: string | undefined;
  filterDateGte: string;
  filterDateLte: string;
};

export const GetTrafficConsumptionRequest$zodSchema: z.ZodType<
  GetTrafficConsumptionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  filterDateGte: z.string().describe(
    "The start timestamp to retrieve the traffic. You must provide in ISO8601 format. Example: filter[date][gte]=2024-04-01T00:00:00Z",
  ),
  filterDateLte: z.string().describe(
    "The end timestamp to retrieve the traffic. You must provide in ISO8601 format. Example: filter[date][gte]=2024-04-31T23:59:59Z",
  ),
  filterProject: z.string().describe("The project id to filter by").optional(),
  filterServer: z.string().describe("The server id to filter by").optional(),
});

export type GetTrafficConsumptionResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  traffic?: Traffic | undefined;
};

export const GetTrafficConsumptionResponse$zodSchema: z.ZodType<
  GetTrafficConsumptionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  traffic: Traffic$zodSchema.optional(),
});
