/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const RoleDataType$zodSchema = z.enum([
  "roles",
]);

export type RoleDataType = z.infer<typeof RoleDataType$zodSchema>;

export type RoleDataAttributes = { name?: string | undefined };

export const RoleDataAttributes$zodSchema: z.ZodType<
  RoleDataAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
});

export type RoleData = {
  id?: string | undefined;
  type?: RoleDataType | undefined;
  attributes?: RoleDataAttributes | undefined;
};

export const RoleData$zodSchema: z.ZodType<RoleData, z.ZodTypeDef, unknown> = z
  .object({
    attributes: z.lazy(() => RoleDataAttributes$zodSchema).optional(),
    id: z.string().optional(),
    type: RoleDataType$zodSchema.optional(),
  });
