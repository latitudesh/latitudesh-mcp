/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { UserData, UserData$zodSchema } from "./userdata.js";

export const PutProjectUserDataType2$zodSchema = z.enum([
  "user_data",
]);

export type PutProjectUserDataType2 = z.infer<
  typeof PutProjectUserDataType2$zodSchema
>;

export type PutProjectUserDataAttributes2 = {
  description?: string | undefined;
  content?: string | undefined;
};

export const PutProjectUserDataAttributes2$zodSchema: z.ZodType<
  PutProjectUserDataAttributes2,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.string().optional(),
  description: z.string().optional(),
});

export type PutProjectUserDataData2 = {
  id: string;
  type: PutProjectUserDataType2;
  attributes?: PutProjectUserDataAttributes2 | undefined;
};

export const PutProjectUserDataData2$zodSchema: z.ZodType<
  PutProjectUserDataData2,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => PutProjectUserDataAttributes2$zodSchema).optional(),
  id: z.string(),
  type: PutProjectUserDataType2$zodSchema,
});

export type PutProjectUserDataRequestBody2 = { data: PutProjectUserDataData2 };

export const PutProjectUserDataRequestBody2$zodSchema: z.ZodType<
  PutProjectUserDataRequestBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => PutProjectUserDataData2$zodSchema),
});

export type PutProjectUserDataRequest = {
  project_id: string;
  user_data_id: string;
  RequestBody?: PutProjectUserDataRequestBody2 | undefined;
};

export const PutProjectUserDataRequest$zodSchema: z.ZodType<
  PutProjectUserDataRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => PutProjectUserDataRequestBody2$zodSchema)
    .optional(),
  project_id: z.string().describe("Project ID or Slug"),
  user_data_id: z.string(),
});

export type PutProjectUserDataResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  user_data?: UserData | undefined;
};

export const PutProjectUserDataResponse$zodSchema: z.ZodType<
  PutProjectUserDataResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  user_data: UserData$zodSchema.optional(),
});
