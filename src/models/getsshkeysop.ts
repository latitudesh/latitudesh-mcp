/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { SshKeys, SshKeys$zodSchema } from "./sshkeys.js";

export type GetSshKeysRequest = { filterTags?: string | undefined };

export const GetSshKeysRequest$zodSchema: z.ZodType<
  GetSshKeysRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  filterTags: z.string().describe(
    "The tags ids to filter by, separated by comma, e.g. `filter[tags]=tag_1,tag_2`will return ssh keys with `tag_1` AND `tag_2`",
  ).optional(),
});

export type GetSshKeysResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  ssh_keys?: SshKeys | undefined;
};

export const GetSshKeysResponse$zodSchema: z.ZodType<
  GetSshKeysResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  ssh_keys: SshKeys$zodSchema.optional(),
});
