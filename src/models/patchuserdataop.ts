/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { UserData, UserData$zodSchema } from "./userdata.js";

export const PatchUserDataType2$zodSchema = z.enum([
  "user_data",
]);

export type PatchUserDataType2 = z.infer<typeof PatchUserDataType2$zodSchema>;

export type PatchUserDataAttributes2 = {
  description?: string | undefined;
  content?: string | undefined;
};

export const PatchUserDataAttributes2$zodSchema: z.ZodType<
  PatchUserDataAttributes2,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.string().optional(),
  description: z.string().optional(),
});

export type PatchUserDataData2 = {
  id: string;
  type: PatchUserDataType2;
  attributes?: PatchUserDataAttributes2 | undefined;
};

export const PatchUserDataData2$zodSchema: z.ZodType<
  PatchUserDataData2,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => PatchUserDataAttributes2$zodSchema).optional(),
  id: z.string(),
  type: PatchUserDataType2$zodSchema,
});

export type PatchUserDataRequestBody2 = { data: PatchUserDataData2 };

export const PatchUserDataRequestBody2$zodSchema: z.ZodType<
  PatchUserDataRequestBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => PatchUserDataData2$zodSchema),
});

export type PatchUserDataRequest = {
  user_data_id: string;
  RequestBody?: PatchUserDataRequestBody2 | undefined;
};

export const PatchUserDataRequest$zodSchema: z.ZodType<
  PatchUserDataRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => PatchUserDataRequestBody2$zodSchema).optional(),
  user_data_id: z.string(),
});

export type PatchUserDataResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  user_data?: UserData | undefined;
};

export const PatchUserDataResponse$zodSchema: z.ZodType<
  PatchUserDataResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  user_data: UserData$zodSchema.optional(),
});
