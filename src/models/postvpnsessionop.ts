/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  VpnSessionWithPassword,
  VpnSessionWithPassword$zodSchema,
} from "./vpnsessionwithpassword.js";

export const PostVpnSessionType2$zodSchema = z.enum([
  "vpn_sessions",
]);

export type PostVpnSessionType2 = z.infer<typeof PostVpnSessionType2$zodSchema>;

export const PostVpnSessionSite2$zodSchema = z.enum([
  "ASH",
  "BGT",
  "BUE",
  "CHI",
  "DAL",
  "FRA",
  "LAX",
  "LON",
  "MEX",
  "MEX2",
  "MIA",
  "MIA2",
  "NYC",
  "SAN",
  "SAO",
  "SAO2",
  "SYD",
  "TYO",
  "TYO2",
]);

export type PostVpnSessionSite2 = z.infer<typeof PostVpnSessionSite2$zodSchema>;

export type PostVpnSessionAttributes2 = {
  site?: PostVpnSessionSite2 | undefined;
  server_id?: string | undefined;
};

export const PostVpnSessionAttributes2$zodSchema: z.ZodType<
  PostVpnSessionAttributes2,
  z.ZodTypeDef,
  unknown
> = z.object({
  server_id: z.string().optional(),
  site: PostVpnSessionSite2$zodSchema.optional(),
});

export type PostVpnSessionData2 = {
  type?: PostVpnSessionType2 | undefined;
  attributes?: PostVpnSessionAttributes2 | undefined;
};

export const PostVpnSessionData2$zodSchema: z.ZodType<
  PostVpnSessionData2,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => PostVpnSessionAttributes2$zodSchema).optional(),
  type: PostVpnSessionType2$zodSchema.optional(),
});

export type PostVpnSessionRequest = { data?: PostVpnSessionData2 | undefined };

export const PostVpnSessionRequest$zodSchema: z.ZodType<
  PostVpnSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => PostVpnSessionData2$zodSchema).optional(),
});

export type PostVpnSessionResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  vpn_session_with_password?: VpnSessionWithPassword | undefined;
};

export const PostVpnSessionResponse$zodSchema: z.ZodType<
  PostVpnSessionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  vpn_session_with_password: VpnSessionWithPassword$zodSchema.optional(),
});
