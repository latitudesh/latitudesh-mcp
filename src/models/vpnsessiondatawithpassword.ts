/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  RegionResourceData,
  RegionResourceData$zodSchema,
} from "./regionresourcedata.js";

export const VpnSessionDataWithPasswordType$zodSchema = z.enum([
  "vpn_sessions",
]);

export type VpnSessionDataWithPasswordType = z.infer<
  typeof VpnSessionDataWithPasswordType$zodSchema
>;

/**
 * from Firewall Response
 */
export const VpnSessionDataWithPasswordStatus$zodSchema = z.enum([
  "enable",
  "disable",
]).describe("from Firewall Response");

export type VpnSessionDataWithPasswordStatus = z.infer<
  typeof VpnSessionDataWithPasswordStatus$zodSchema
>;

export type VpnSessionDataWithPasswordAttributes = {
  user_name?: string | undefined;
  password?: string | undefined;
  port?: string | undefined;
  host?: string | undefined;
  region?: RegionResourceData | undefined;
  status?: VpnSessionDataWithPasswordStatus | undefined;
  expires_at?: string | undefined;
  created_at?: string | undefined;
  updated_at?: string | undefined;
};

export const VpnSessionDataWithPasswordAttributes$zodSchema: z.ZodType<
  VpnSessionDataWithPasswordAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  created_at: z.string().optional(),
  expires_at: z.string().optional(),
  host: z.string().optional(),
  password: z.string().optional(),
  port: z.string().optional(),
  region: RegionResourceData$zodSchema.optional(),
  status: VpnSessionDataWithPasswordStatus$zodSchema.optional(),
  updated_at: z.string().optional(),
  user_name: z.string().optional(),
});

export type VpnSessionDataWithPassword = {
  id?: string | undefined;
  type?: VpnSessionDataWithPasswordType | undefined;
  attributes?: VpnSessionDataWithPasswordAttributes | undefined;
};

export const VpnSessionDataWithPassword$zodSchema: z.ZodType<
  VpnSessionDataWithPassword,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => VpnSessionDataWithPasswordAttributes$zodSchema)
    .optional(),
  id: z.string().optional(),
  type: VpnSessionDataWithPasswordType$zodSchema.optional(),
});
