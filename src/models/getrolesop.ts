/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { RoleData, RoleData$zodSchema } from "./roledata.js";

export type GetRolesRequest = {
  pageSize?: number | undefined;
  pageNumber?: number | undefined;
};

export const GetRolesRequest$zodSchema: z.ZodType<
  GetRolesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pageNumber: z.number().int().default(1).describe(
    "Page number to return (starts at 1)",
  ),
  pageSize: z.number().int().default(20).describe(
    "Number of items to return per page",
  ),
});

/**
 * Success
 */
export type GetRolesResponseBody = { data?: Array<RoleData> | undefined };

export const GetRolesResponseBody$zodSchema: z.ZodType<
  GetRolesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(RoleData$zodSchema).optional(),
}).describe("Success");

export type GetRolesResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: GetRolesResponseBody | undefined;
};

export const GetRolesResponse$zodSchema: z.ZodType<
  GetRolesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => GetRolesResponseBody$zodSchema).optional(),
});
