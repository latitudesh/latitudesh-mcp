/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const FirewallDataType$zodSchema = z.enum([
  "firewalls",
]);

export type FirewallDataType = z.infer<typeof FirewallDataType$zodSchema>;

export type Rule = {
  from?: string | undefined;
  to?: string | undefined;
  port?: string | undefined;
  protocol?: string | undefined;
};

export const Rule$zodSchema: z.ZodType<Rule, z.ZodTypeDef, unknown> = z.object({
  from: z.string().optional(),
  port: z.string().optional(),
  protocol: z.string().optional(),
  to: z.string().optional(),
});

export type FirewallDataProject = {
  id?: string | undefined;
  slug?: string | undefined;
  name?: string | undefined;
};

export const FirewallDataProject$zodSchema: z.ZodType<
  FirewallDataProject,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  slug: z.string().optional(),
});

export type FirewallDataAttributes = {
  name?: string | undefined;
  rules?: Array<Rule> | undefined;
  project?: FirewallDataProject | undefined;
};

export const FirewallDataAttributes$zodSchema: z.ZodType<
  FirewallDataAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  project: z.lazy(() => FirewallDataProject$zodSchema).optional(),
  rules: z.array(z.lazy(() => Rule$zodSchema)).optional(),
});

export type FirewallData = {
  id?: string | undefined;
  type?: FirewallDataType | undefined;
  attributes?: FirewallDataAttributes | undefined;
};

export const FirewallData$zodSchema: z.ZodType<
  FirewallData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => FirewallDataAttributes$zodSchema).optional(),
  id: z.string().optional(),
  type: FirewallDataType$zodSchema.optional(),
});
