/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { FilesystemData, FilesystemData$zodSchema } from "./filesystemdata.js";

export const PatchStorageFilesystemsType2$zodSchema = z.enum([
  "filesystems",
]);

export type PatchStorageFilesystemsType2 = z.infer<
  typeof PatchStorageFilesystemsType2$zodSchema
>;

export type PatchStorageFilesystemsAttributes2 = {
  size_in_gb?: number | undefined;
};

export const PatchStorageFilesystemsAttributes2$zodSchema: z.ZodType<
  PatchStorageFilesystemsAttributes2,
  z.ZodTypeDef,
  unknown
> = z.object({
  size_in_gb: z.number().int().default(1500),
});

export type PatchStorageFilesystemsData2 = {
  id: string;
  type: PatchStorageFilesystemsType2;
  attributes: PatchStorageFilesystemsAttributes2;
};

export const PatchStorageFilesystemsData2$zodSchema: z.ZodType<
  PatchStorageFilesystemsData2,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => PatchStorageFilesystemsAttributes2$zodSchema),
  id: z.string(),
  type: PatchStorageFilesystemsType2$zodSchema,
});

export type PatchStorageFilesystemsRequestBody2 = {
  data: PatchStorageFilesystemsData2;
};

export const PatchStorageFilesystemsRequestBody2$zodSchema: z.ZodType<
  PatchStorageFilesystemsRequestBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => PatchStorageFilesystemsData2$zodSchema),
});

export type PatchStorageFilesystemsRequest = {
  filesystem_id: string;
  RequestBody: PatchStorageFilesystemsRequestBody2;
};

export const PatchStorageFilesystemsRequest$zodSchema: z.ZodType<
  PatchStorageFilesystemsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => PatchStorageFilesystemsRequestBody2$zodSchema),
  filesystem_id: z.string(),
});

/**
 * Success
 */
export type PatchStorageFilesystemsResponseBody = {
  data?: FilesystemData | undefined;
};

export const PatchStorageFilesystemsResponseBody$zodSchema: z.ZodType<
  PatchStorageFilesystemsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: FilesystemData$zodSchema.optional(),
}).describe("Success");

export type PatchStorageFilesystemsResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: PatchStorageFilesystemsResponseBody | undefined;
};

export const PatchStorageFilesystemsResponse$zodSchema: z.ZodType<
  PatchStorageFilesystemsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => PatchStorageFilesystemsResponseBody$zodSchema)
    .optional(),
});
