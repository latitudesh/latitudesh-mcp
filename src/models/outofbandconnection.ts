/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SshKey = {
  id?: string | undefined;
  description?: string | undefined;
  fingerprint?: string | undefined;
};

export const SshKey$zodSchema: z.ZodType<SshKey, z.ZodTypeDef, unknown> = z
  .object({
    description: z.string().optional(),
    fingerprint: z.string().optional(),
    id: z.string().optional(),
  });

/**
 * credentials are valid only when the server is deployed with ssh keys
 */
export type OutOfBandConnectionCredentials = {
  user?: string | undefined;
  password?: string | undefined;
};

export const OutOfBandConnectionCredentials$zodSchema: z.ZodType<
  OutOfBandConnectionCredentials,
  z.ZodTypeDef,
  unknown
> = z.object({
  password: z.string().optional(),
  user: z.string().optional(),
}).describe(
  "credentials are valid only when the server is deployed with ssh keys",
);

export type OutOfBandConnectionAttributes = {
  ssh_key?: SshKey | undefined;
  created_at?: string | undefined;
  username?: string | undefined;
  credentials?: OutOfBandConnectionCredentials | undefined;
  port?: string | undefined;
  access_ip?: string | undefined;
  server_id?: string | undefined;
  status?: string | undefined;
};

export const OutOfBandConnectionAttributes$zodSchema: z.ZodType<
  OutOfBandConnectionAttributes,
  z.ZodTypeDef,
  unknown
> = z.object({
  access_ip: z.string().optional(),
  created_at: z.string().optional(),
  credentials: z.lazy(() => OutOfBandConnectionCredentials$zodSchema)
    .optional(),
  port: z.string().optional(),
  server_id: z.string().optional(),
  ssh_key: z.lazy(() => SshKey$zodSchema).optional(),
  status: z.string().optional(),
  username: z.string().optional(),
});

export type OutOfBandConnectionData = {
  id?: string | undefined;
  type?: string | undefined;
  attributes?: OutOfBandConnectionAttributes | undefined;
};

export const OutOfBandConnectionData$zodSchema: z.ZodType<
  OutOfBandConnectionData,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: z.lazy(() => OutOfBandConnectionAttributes$zodSchema).optional(),
  id: z.string().optional(),
  type: z.string().optional(),
});

export type OutOfBandConnection = {
  data?: OutOfBandConnectionData | undefined;
};

export const OutOfBandConnection$zodSchema: z.ZodType<
  OutOfBandConnection,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => OutOfBandConnectionData$zodSchema).optional(),
});
