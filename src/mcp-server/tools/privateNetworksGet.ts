/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { privateNetworksGet } from "../../funcs/privateNetworksGet.js";
import { GetVirtualNetworkRequest$zodSchema } from "../../models/getvirtualnetworkop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetVirtualNetworkRequest$zodSchema,
};

export const tool$privateNetworksGet: ToolDefinition<typeof args> = {
  name: "private-networks-get",
  description: `Retrieve a Virtual Network

Retrieve a Virtual Network.
`,
  annotations: {
    "title": "",
    "destructiveHint": false,
    "idempotentHint": false,
    "openWorldHint": false,
    "readOnlyHint": true,
  },
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await privateNetworksGet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
