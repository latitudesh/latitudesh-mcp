/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { rolesList } from "../../funcs/rolesList.js";
import { GetRolesRequest$zodSchema } from "../../models/getrolesop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetRolesRequest$zodSchema.optional(),
};

export const tool$rolesList: ToolDefinition<typeof args> = {
  name: "roles-list",
  description: `List all Roles

Returns a list of all roles that can be assigned to users
`,
  annotations: {
    "title": "",
    "destructiveHint": false,
    "idempotentHint": false,
    "openWorldHint": false,
    "readOnlyHint": true,
  },
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await rolesList(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
