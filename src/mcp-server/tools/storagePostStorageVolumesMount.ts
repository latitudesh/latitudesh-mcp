/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { storagePostStorageVolumesMount } from "../../funcs/storagePostStorageVolumesMount.js";
import { PostStorageVolumesMountRequest$zodSchema } from "../../models/poststoragevolumesmountop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: PostStorageVolumesMountRequest$zodSchema,
};

export const tool$storagePostStorageVolumesMount: ToolDefinition<typeof args> =
  {
    name: "storage-post-storage-volumes-mount",
    description: `Mount volume

Mounts volume storage by adding the client to an allowed list`,
    annotations: {
      "title": "",
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false,
      "readOnlyHint": false,
    },
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await storagePostStorageVolumesMount(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      return formatResult(void 0, apiCall);
    },
  };
