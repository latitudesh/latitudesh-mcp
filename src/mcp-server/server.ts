/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { LatitudeshCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$apiKeysCreate } from "./tools/apiKeysCreate.js";
import { tool$apiKeysDelete } from "./tools/apiKeysDelete.js";
import { tool$apiKeysList } from "./tools/apiKeysList.js";
import { tool$apiKeysUpdate } from "./tools/apiKeysUpdate.js";
import { tool$billingListUsage } from "./tools/billingListUsage.js";
import { tool$eventsList } from "./tools/eventsList.js";
import { tool$firewallsAssignmentsCreate } from "./tools/firewallsAssignmentsCreate.js";
import { tool$firewallsCreate } from "./tools/firewallsCreate.js";
import { tool$firewallsDelete } from "./tools/firewallsDelete.js";
import { tool$firewallsDeleteAssignment } from "./tools/firewallsDeleteAssignment.js";
import { tool$firewallsGet } from "./tools/firewallsGet.js";
import { tool$firewallsGetAllFirewallAssignments } from "./tools/firewallsGetAllFirewallAssignments.js";
import { tool$firewallsList } from "./tools/firewallsList.js";
import { tool$firewallsListAssignments } from "./tools/firewallsListAssignments.js";
import { tool$firewallsUpdate } from "./tools/firewallsUpdate.js";
import { tool$ipAddressesGet } from "./tools/ipAddressesGet.js";
import { tool$ipAddressesList } from "./tools/ipAddressesList.js";
import { tool$operatingSystemsListPlans } from "./tools/operatingSystemsListPlans.js";
import { tool$plansGet } from "./tools/plansGet.js";
import { tool$plansGetBandwidth } from "./tools/plansGetBandwidth.js";
import { tool$plansGetContainersPlan } from "./tools/plansGetContainersPlan.js";
import { tool$plansList } from "./tools/plansList.js";
import { tool$plansListStorage } from "./tools/plansListStorage.js";
import { tool$plansUpdateBandwidth } from "./tools/plansUpdateBandwidth.js";
import { tool$plansVmList } from "./tools/plansVmList.js";
import { tool$privateNetworksAssign } from "./tools/privateNetworksAssign.js";
import { tool$privateNetworksCreate } from "./tools/privateNetworksCreate.js";
import { tool$privateNetworksDeleteAssignment } from "./tools/privateNetworksDeleteAssignment.js";
import { tool$privateNetworksGet } from "./tools/privateNetworksGet.js";
import { tool$privateNetworksList } from "./tools/privateNetworksList.js";
import { tool$privateNetworksListAssignments } from "./tools/privateNetworksListAssignments.js";
import { tool$privateNetworksUpdate } from "./tools/privateNetworksUpdate.js";
import { tool$projectsCreate } from "./tools/projectsCreate.js";
import { tool$projectsDelete } from "./tools/projectsDelete.js";
import { tool$projectsList } from "./tools/projectsList.js";
import { tool$projectsSshKeysPostProjectSshKey } from "./tools/projectsSshKeysPostProjectSshKey.js";
import { tool$projectsUpdate } from "./tools/projectsUpdate.js";
import { tool$regionsFetch } from "./tools/regionsFetch.js";
import { tool$regionsGet } from "./tools/regionsGet.js";
import { tool$rolesGet } from "./tools/rolesGet.js";
import { tool$rolesList } from "./tools/rolesList.js";
import { tool$serversCreate } from "./tools/serversCreate.js";
import { tool$serversCreateIpmiSession } from "./tools/serversCreateIpmiSession.js";
import { tool$serversDelete } from "./tools/serversDelete.js";
import { tool$serversExitRescueMode } from "./tools/serversExitRescueMode.js";
import { tool$serversGet } from "./tools/serversGet.js";
import { tool$serversGetDeployConfig } from "./tools/serversGetDeployConfig.js";
import { tool$serversGetOutOfBand } from "./tools/serversGetOutOfBand.js";
import { tool$serversList } from "./tools/serversList.js";
import { tool$serversLock } from "./tools/serversLock.js";
import { tool$serversReinstall } from "./tools/serversReinstall.js";
import { tool$serversRunAction } from "./tools/serversRunAction.js";
import { tool$serversScheduleDeletion } from "./tools/serversScheduleDeletion.js";
import { tool$serversStartOutOfBandConnection } from "./tools/serversStartOutOfBandConnection.js";
import { tool$serversStartRescueMode } from "./tools/serversStartRescueMode.js";
import { tool$serversUnlock } from "./tools/serversUnlock.js";
import { tool$serversUnscheduleDeletion } from "./tools/serversUnscheduleDeletion.js";
import { tool$serversUpdate } from "./tools/serversUpdate.js";
import { tool$serversUpdateDeployConfig } from "./tools/serversUpdateDeployConfig.js";
import { tool$sshKeysCreate } from "./tools/sshKeysCreate.js";
import { tool$sshKeysDelete } from "./tools/sshKeysDelete.js";
import { tool$sshKeysGet } from "./tools/sshKeysGet.js";
import { tool$sshKeysList } from "./tools/sshKeysList.js";
import { tool$sshKeysListAll } from "./tools/sshKeysListAll.js";
import { tool$sshKeysModifyProjectKey } from "./tools/sshKeysModifyProjectKey.js";
import { tool$sshKeysRemoveFromProject } from "./tools/sshKeysRemoveFromProject.js";
import { tool$sshKeysRetrieve } from "./tools/sshKeysRetrieve.js";
import { tool$sshKeysUpdate } from "./tools/sshKeysUpdate.js";
import { tool$storageCreateFilesystem } from "./tools/storageCreateFilesystem.js";
import { tool$storageDeleteFilesystem } from "./tools/storageDeleteFilesystem.js";
import { tool$storageDeleteStorageVolumes } from "./tools/storageDeleteStorageVolumes.js";
import { tool$storageGetStorageVolume } from "./tools/storageGetStorageVolume.js";
import { tool$storageGetStorageVolumes } from "./tools/storageGetStorageVolumes.js";
import { tool$storageListFilesystems } from "./tools/storageListFilesystems.js";
import { tool$storagePostStorageVolumes } from "./tools/storagePostStorageVolumes.js";
import { tool$storagePostStorageVolumesMount } from "./tools/storagePostStorageVolumesMount.js";
import { tool$storageUpdateFilesystem } from "./tools/storageUpdateFilesystem.js";
import { tool$tagsCreate } from "./tools/tagsCreate.js";
import { tool$tagsDelete } from "./tools/tagsDelete.js";
import { tool$tagsList } from "./tools/tagsList.js";
import { tool$tagsUpdate } from "./tools/tagsUpdate.js";
import { tool$teamMembersDelete } from "./tools/teamMembersDelete.js";
import { tool$teamMembersPostTeamMembers } from "./tools/teamMembersPostTeamMembers.js";
import { tool$teamsCreate } from "./tools/teamsCreate.js";
import { tool$teamsGet } from "./tools/teamsGet.js";
import { tool$teamsMembersGetTeamMembers } from "./tools/teamsMembersGetTeamMembers.js";
import { tool$teamsUpdate } from "./tools/teamsUpdate.js";
import { tool$trafficGet } from "./tools/trafficGet.js";
import { tool$trafficGetQuota } from "./tools/trafficGetQuota.js";
import { tool$userDataCreate } from "./tools/userDataCreate.js";
import { tool$userDataCreateNew } from "./tools/userDataCreateNew.js";
import { tool$userDataDelete } from "./tools/userDataDelete.js";
import { tool$userDataDeleteProjectUserData } from "./tools/userDataDeleteProjectUserData.js";
import { tool$userDataGetProjectUserData } from "./tools/userDataGetProjectUserData.js";
import { tool$userDataGetProjectUsersData } from "./tools/userDataGetProjectUsersData.js";
import { tool$userDataList } from "./tools/userDataList.js";
import { tool$userDataRetrieve } from "./tools/userDataRetrieve.js";
import { tool$userDataUpdate } from "./tools/userDataUpdate.js";
import { tool$userDataUpdateForProject } from "./tools/userDataUpdateForProject.js";
import { tool$userProfileGet } from "./tools/userProfileGet.js";
import { tool$userProfileListTeams } from "./tools/userProfileListTeams.js";
import { tool$userProfileUpdate } from "./tools/userProfileUpdate.js";
import { tool$virtualMachinesCreate } from "./tools/virtualMachinesCreate.js";
import { tool$virtualMachinesCreateVirtualMachineAction } from "./tools/virtualMachinesCreateVirtualMachineAction.js";
import { tool$virtualMachinesDelete } from "./tools/virtualMachinesDelete.js";
import { tool$virtualMachinesGet } from "./tools/virtualMachinesGet.js";
import { tool$virtualMachinesList } from "./tools/virtualMachinesList.js";
import { tool$virtualNetworksDelete } from "./tools/virtualNetworksDelete.js";
import { tool$vpnSessionsCreate } from "./tools/vpnSessionsCreate.js";
import { tool$vpnSessionsDelete } from "./tools/vpnSessionsDelete.js";
import { tool$vpnSessionsList } from "./tools/vpnSessionsList.js";
import { tool$vpnSessionsRefreshPassword } from "./tools/vpnSessionsRefreshPassword.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  getSDK?: () => LatitudeshCore;
  serverURL?: string | undefined;
  security?: SDKOptions["security"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
  latitude_api_key?: SDKOptions["latitude_api_key"] | undefined;
}) {
  const server = new McpServer({
    name: "Latitudesh",
    version: "0.1.0",
  });

  const getClient = deps.getSDK || (() =>
    new LatitudeshCore({
      security: deps.security,
      serverURL: deps.serverURL,
      serverIdx: deps.serverIdx,
      latitude_api_key: deps.latitude_api_key,
      debugLogger: deps.logger.level === "debug"
        ? {
          log: (...args) => console.log(...args),
          group: (...args) => console.group(...args),
          groupEnd: (...args) => console.groupEnd(...args),
        }
        : undefined,
    }));

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    getClient,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(
    deps.logger,
    server,
    getClient,
    scopes,
  );
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    getClient,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, getClient, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$apiKeysList);
  tool(tool$apiKeysCreate);
  tool(tool$apiKeysUpdate);
  tool(tool$apiKeysDelete);
  tool(tool$billingListUsage);
  tool(tool$eventsList);
  tool(tool$firewallsGetAllFirewallAssignments);
  tool(tool$firewallsList);
  tool(tool$firewallsCreate);
  tool(tool$firewallsGet);
  tool(tool$firewallsDelete);
  tool(tool$firewallsUpdate);
  tool(tool$firewallsListAssignments);
  tool(tool$firewallsDeleteAssignment);
  tool(tool$firewallsAssignmentsCreate);
  tool(tool$ipAddressesList);
  tool(tool$ipAddressesGet);
  tool(tool$teamsMembersGetTeamMembers);
  tool(tool$teamMembersPostTeamMembers);
  tool(tool$teamMembersDelete);
  tool(tool$operatingSystemsListPlans);
  tool(tool$plansList);
  tool(tool$plansGet);
  tool(tool$plansGetBandwidth);
  tool(tool$plansUpdateBandwidth);
  tool(tool$plansGetContainersPlan);
  tool(tool$plansListStorage);
  tool(tool$plansVmList);
  tool(tool$projectsList);
  tool(tool$projectsCreate);
  tool(tool$projectsDelete);
  tool(tool$projectsUpdate);
  tool(tool$sshKeysList);
  tool(tool$sshKeysGet);
  tool(tool$sshKeysRemoveFromProject);
  tool(tool$sshKeysModifyProjectKey);
  tool(tool$sshKeysListAll);
  tool(tool$sshKeysCreate);
  tool(tool$sshKeysRetrieve);
  tool(tool$sshKeysDelete);
  tool(tool$sshKeysUpdate);
  tool(tool$projectsSshKeysPostProjectSshKey);
  tool(tool$userDataGetProjectUsersData);
  tool(tool$userDataGetProjectUserData);
  tool(tool$userDataDeleteProjectUserData);
  tool(tool$userDataCreate);
  tool(tool$userDataUpdateForProject);
  tool(tool$userDataList);
  tool(tool$userDataCreateNew);
  tool(tool$userDataRetrieve);
  tool(tool$userDataDelete);
  tool(tool$userDataUpdate);
  tool(tool$regionsGet);
  tool(tool$regionsFetch);
  tool(tool$rolesList);
  tool(tool$rolesGet);
  tool(tool$serversList);
  tool(tool$serversCreate);
  tool(tool$serversGet);
  tool(tool$serversDelete);
  tool(tool$serversUpdate);
  tool(tool$serversGetDeployConfig);
  tool(tool$serversUpdateDeployConfig);
  tool(tool$serversLock);
  tool(tool$serversUnlock);
  tool(tool$serversGetOutOfBand);
  tool(tool$serversStartOutOfBandConnection);
  tool(tool$serversRunAction);
  tool(tool$serversCreateIpmiSession);
  tool(tool$serversStartRescueMode);
  tool(tool$serversExitRescueMode);
  tool(tool$serversScheduleDeletion);
  tool(tool$serversUnscheduleDeletion);
  tool(tool$serversReinstall);
  tool(tool$storageListFilesystems);
  tool(tool$storageCreateFilesystem);
  tool(tool$storageDeleteFilesystem);
  tool(tool$storageUpdateFilesystem);
  tool(tool$storageGetStorageVolumes);
  tool(tool$storagePostStorageVolumes);
  tool(tool$storageGetStorageVolume);
  tool(tool$storageDeleteStorageVolumes);
  tool(tool$storagePostStorageVolumesMount);
  tool(tool$tagsList);
  tool(tool$tagsCreate);
  tool(tool$tagsDelete);
  tool(tool$tagsUpdate);
  tool(tool$teamsGet);
  tool(tool$teamsCreate);
  tool(tool$teamsUpdate);
  tool(tool$trafficGet);
  tool(tool$trafficGetQuota);
  tool(tool$userProfileGet);
  tool(tool$userProfileUpdate);
  tool(tool$userProfileListTeams);
  tool(tool$virtualMachinesList);
  tool(tool$virtualMachinesCreate);
  tool(tool$virtualMachinesGet);
  tool(tool$virtualMachinesDelete);
  tool(tool$virtualMachinesCreateVirtualMachineAction);
  tool(tool$privateNetworksList);
  tool(tool$privateNetworksCreate);
  tool(tool$privateNetworksGet);
  tool(tool$privateNetworksUpdate);
  tool(tool$privateNetworksListAssignments);
  tool(tool$privateNetworksAssign);
  tool(tool$privateNetworksDeleteAssignment);
  tool(tool$virtualNetworksDelete);
  tool(tool$vpnSessionsList);
  tool(tool$vpnSessionsCreate);
  tool(tool$vpnSessionsRefreshPassword);
  tool(tool$vpnSessionsDelete);

  return server;
}
